# ===================================================================
# CONFIGURACIÓN DE HEADERS DE SEGURIDAD AVANZADOS - BIKEDREAMS API
# ===================================================================

# =================================
# CONFIGURACIÓN BÁSICA DE ENTORNO
# =================================
NODE_ENV=production
PORT=3001
HOST=0.0.0.0

# =================================
# CONFIGURACIÓN DE CORS AVANZADO
# =================================

# Orígenes permitidos para la aplicación (separados por comas)
ALLOWED_ORIGINS=https://bikedreams.com,https://www.bikedreams.com,https://admin.bikedreams.com

# Orígenes permitidos específicamente para autenticación
AUTH_ALLOWED_ORIGINS=https://bikedreams.com,https://www.bikedreams.com

# Orígenes permitidos para el panel de administración
ADMIN_ALLOWED_ORIGINS=https://admin.bikedreams.com

# =================================
# CONFIGURACIÓN DE IP SECURITY
# =================================

# IPs permitidas para acceso administrativo (separadas por comas)
# Ejemplo: oficina, VPN corporativa, etc.
ADMIN_ALLOWED_IPS=192.168.1.100,10.0.0.50,203.0.113.25

# =================================
# CONFIGURACIÓN DE TLS/SSL
# =================================

# Requerir certificados de cliente para endpoints críticos
REQUIRE_CLIENT_CERTS=false

# Configuración de HSTS
HSTS_MAX_AGE=63072000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=true

# =================================
# CONFIGURACIÓN DE CSP (Content Security Policy)
# =================================

# Dominio base para CSP
CSP_BASE_DOMAIN=bikedreams.com

# CDN permitidos para recursos estáticos
CSP_ALLOWED_CDNS=cdnjs.cloudflare.com,fonts.googleapis.com,fonts.gstatic.com

# Dominios permitidos para conectar (APIs externas)
CSP_CONNECT_DOMAINS=api.stripe.com,api.paypal.com,maps.googleapis.com

# =================================
# CONFIGURACIÓN DE REPORTES DE SEGURIDAD
# =================================

# URL para reportes de violaciones CSP
CSP_REPORT_URI=/api/csp-report

# URL para reportes de Certificate Transparency
EXPECT_CT_REPORT_URI=/api/expect-ct-report

# =================================
# CONFIGURACIÓN DE NOTIFICACIONES
# =================================

# SMTP para alertas de seguridad críticas
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=true
SMTP_USER=alerts@example.com
SMTP_PASS=your-app-password-here
SMTP_FROM=BikeDreams Security <alerts@example.com>

# Email para recibir alertas de seguridad
SECURITY_ALERT_EMAIL=admin@example.com,security@example.com

# Webhook de Slack para notificaciones
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# =================================
# CONFIGURACIÓN DE LOGGING
# =================================

# Nivel de logging de seguridad
SECURITY_LOG_LEVEL=info

# Retención de logs de seguridad (en días)
SECURITY_LOG_RETENTION_DAYS=90

# =================================
# CONFIGURACIÓN DE RATE LIMITING
# =================================

# Límites específicos por endpoint
AUTH_RATE_LIMIT=5
ADMIN_RATE_LIMIT=10
API_RATE_LIMIT=100

# Ventana de tiempo para rate limiting (en minutos)
RATE_LIMIT_WINDOW=15

# =================================
# CONFIGURACIÓN DE MONITOREO
# =================================

# Umbral de alertas por ataques por hora
ALERT_ATTACKS_THRESHOLD=10

# Umbral de fallos de autenticación por hora
ALERT_AUTH_FAILURES_THRESHOLD=50

# Umbral de IPs sospechosas
ALERT_SUSPICIOUS_IPS_THRESHOLD=5

# =================================
# CONFIGURACIÓN DE PERFORMANCE
# =================================

# Cache de headers de seguridad (en segundos)
SECURITY_HEADERS_CACHE=3600

# Timeout para validaciones de seguridad (en milisegundos)
SECURITY_VALIDATION_TIMEOUT=5000

# =================================
# CONFIGURACIÓN DE DESARROLLO/TESTING
# =================================

# Deshabilitar ciertas validaciones en desarrollo
DEV_SKIP_IP_VALIDATION=true
DEV_ALLOW_INSECURE_CONNECTIONS=true

# =================================
# CONFIGURACIÓN DE INTEGRACIÓN
# =================================

# APIs de terceros para validación de IPs sospechosas
IP_REPUTATION_API_KEY=your-api-key-here
GEO_IP_API_KEY=your-geo-api-key-here

# Servicios de análisis de malware para archivos subidos
VIRUS_SCAN_API_KEY=your-virus-scan-api-key

# =================================
# CONFIGURACIÓN DE BACKUP/RECOVERY
# =================================

# Ubicación de respaldos de logs de seguridad
SECURITY_LOGS_BACKUP_PATH=/var/backups/security-logs

# Frecuencia de respaldo (en horas)
BACKUP_FREQUENCY_HOURS=24

# =================================
# CONFIGURACIÓN AVANZADA
# =================================

# Algoritmo de hash para signatures de seguridad
SECURITY_HASH_ALGORITHM=sha256

# Clave para firmar tokens de seguridad internos
SECURITY_SIGNING_KEY=your-256-bit-secret-key-here

# Salt para hashing de datos sensibles
SECURITY_SALT=your-random-salt-here

# =================================
# CONFIGURACIÓN DE COMPLIANCE
# =================================

# Habilitar logging para compliance (GDPR, etc.)
COMPLIANCE_LOGGING=true

# Retención de datos de auditoría (en días)
AUDIT_DATA_RETENTION=2555  # 7 años

# Anonimización automática de datos sensibles
AUTO_ANONYMIZE_LOGS=true

# =================================
# NOTAS IMPORTANTES
# =================================

# 1. Nunca commitear este archivo con valores reales a control de versiones
# 2. Usar un gestor de secretos en producción (AWS Secrets Manager, Azure Key Vault, etc.)
# 3. Rotar regularmente las claves y secrets
# 4. Monitorear el acceso a estas variables de entorno
# 5. Validar todas las configuraciones antes de desplegar en producción

# =================================
# VALIDACIÓN DE CONFIGURACIÓN
# =================================

# Para validar la configuración, ejecutar:
# npm run validate-security-config

# Para generar un reporte de configuración de seguridad:
# npm run security-config-report
